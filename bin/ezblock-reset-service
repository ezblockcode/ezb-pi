#!/usr/bin/python3
# -*- coding utf-8 -*-

from ezblock import Pin, delay,PWM, Servo
from gpiozero import Button
import time
import tempfile
import subprocess

reset_switch = Button(16)
user_switch = Button(25)
mcu_reset = Pin("MCURST")
status_led = Pin("LED")

resize_script = "/usr/bin/resize_once"
  
is_reset = None
is_user = None

# close external bluetooth
def close_ex_ble():
    # close external bluetooth
    ble_reset = Pin("BLERST")
    ble_reset.off()

def log(msg):
    msg = "Ezblock-Reset-Service [{}] [DEBUG] {}".format(time.asctime(), msg)
    run_command("echo {} >> /opt/ezblock/log".format(msg))
    print(msg)

def run_command(cmd):
    with tempfile.TemporaryFile() as f:
        subprocess.call(cmd, shell=True, stdout=f, stderr=f)
        f.seek(0)
        output = f.read()
        return output.decode()


def reset_servo():
    PINS = ["P0","P1","P2","P3","P4","P5","P6","P7","P8","P9","P10","P11"]
    for pin in PINS:
        print(pin)
        pwm = PWM(pin)
        servo = Servo(pwm)
        servo.angle(0)
    time.sleep(0.5)    

    
def reset_pressed_callback(ev):
    global is_reset
    is_reset = True
    status_led.value(0)

def reset_released_callback(ev):
    global is_reset
    is_reset = False
    status_led.value(0)

def user_pressed_callback(ev):
    global is_user
    is_user = True
    #status_led.value(0)

def user_released_callback(ev):
    global is_user
    is_user = False
    #status_led.value(0)



log("Check resize script")
output = run_command("ls {}".format(resize_script))
if output != "":
    log("Resizing...")
    run_command("{}".format(resize_script))
    run_command("rm {}".format(resize_script))
    log("Done.")
else:
    log("Skip")
log('Start')
log('Setup irq')
reset_switch.when_pressed = reset_pressed_callback
reset_switch.when_released = reset_released_callback
user_switch.when_pressed = user_pressed_callback
user_switch.when_released = user_released_callback

log('Finished')

def main():
    global is_reset
    global is_user
    count = 0
    user_flag = False
    while True:
        if is_reset == True:
            count += 1
            if count > 6:
                #log("Led On")
                status_led.value(1) 
                if is_user == True:
                    if user_flag == False:
                        user_flag = True
                        reset_servo()
                        log("servo  reset") 
                        time.sleep(0.01)                  
        elif is_reset == False and user_flag == False:
            log("soft reset")
            close_ex_ble()
            mcu_reset.off()
            time.sleep(0.001)
            mcu_reset.on()
            time.sleep(0.01)
            log("restart ezblock service")
            run_command("sudo service ezblock restart")
            count = 0
            is_reset = None
        elif is_reset == False:
            is_reset = None
            user_flag = False
            count = 0
            status_led.value(0)   
            
        delay(500)

if __name__ == "__main__":
    try:
        close_ex_ble()
        main()
    finally:
        close_ex_ble